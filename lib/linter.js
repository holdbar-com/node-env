import { ESLint } from 'eslint';
import { join, relative } from 'node:path';
export function makeCache(path) {
    return new ESLint({
        cwd: path,
        overrideConfig: {
            parserOptions: {
                project: join(path, 'tsconfig.json'),
            },
        },
    });
}
export async function lint(reporter, path, files, cache) {
    const results = await cache.lintFiles(files);
    for (const result of results) {
        for (const msg of result.messages) {
            reporter.error(msg.message, relative(path, result.filePath), msg.line, msg.column);
        }
    }
    return !results.some((r) => r.fatalErrorCount + r.errorCount + r.warningCount);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGludGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibGludGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDaEMsT0FBTyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFHM0MsTUFBTSxVQUFVLFNBQVMsQ0FBQyxJQUFZO0lBQ3BDLE9BQU8sSUFBSSxNQUFNLENBQUM7UUFDaEIsR0FBRyxFQUFFLElBQUk7UUFDVCxjQUFjLEVBQUU7WUFDZCxhQUFhLEVBQUU7Z0JBQ2IsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsZUFBZSxDQUFDO2FBQ3JDO1NBQ0Y7S0FDRixDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQ3hCLFFBQWtCLEVBQ2xCLElBQVksRUFDWixLQUFlLEVBQ2YsS0FBYTtJQUViLE1BQU0sT0FBTyxHQUFHLE1BQU0sS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM3QyxLQUFLLE1BQU0sTUFBTSxJQUFJLE9BQU8sRUFBRTtRQUM1QixLQUFLLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDakMsUUFBUSxDQUFDLEtBQUssQ0FDWixHQUFHLENBQUMsT0FBTyxFQUNYLFFBQVEsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUMvQixHQUFHLENBQUMsSUFBSSxFQUNSLEdBQUcsQ0FBQyxNQUFNLENBQ1gsQ0FBQztTQUNIO0tBQ0Y7SUFDRCxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FDbEIsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxlQUFlLEdBQUcsQ0FBQyxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUMsWUFBWSxDQUN6RCxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVTTGludCB9IGZyb20gJ2VzbGludCc7XG5pbXBvcnQgeyBqb2luLCByZWxhdGl2ZSB9IGZyb20gJ25vZGU6cGF0aCc7XG5pbXBvcnQgeyBSZXBvcnRlciB9IGZyb20gJy4vcmVwb3J0ZXIuanMnO1xuXG5leHBvcnQgZnVuY3Rpb24gbWFrZUNhY2hlKHBhdGg6IHN0cmluZykge1xuICByZXR1cm4gbmV3IEVTTGludCh7XG4gICAgY3dkOiBwYXRoLFxuICAgIG92ZXJyaWRlQ29uZmlnOiB7XG4gICAgICBwYXJzZXJPcHRpb25zOiB7XG4gICAgICAgIHByb2plY3Q6IGpvaW4ocGF0aCwgJ3RzY29uZmlnLmpzb24nKSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsaW50KFxuICByZXBvcnRlcjogUmVwb3J0ZXIsXG4gIHBhdGg6IHN0cmluZyxcbiAgZmlsZXM6IHN0cmluZ1tdLFxuICBjYWNoZTogRVNMaW50XG4pIHtcbiAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IGNhY2hlLmxpbnRGaWxlcyhmaWxlcyk7XG4gIGZvciAoY29uc3QgcmVzdWx0IG9mIHJlc3VsdHMpIHtcbiAgICBmb3IgKGNvbnN0IG1zZyBvZiByZXN1bHQubWVzc2FnZXMpIHtcbiAgICAgIHJlcG9ydGVyLmVycm9yKFxuICAgICAgICBtc2cubWVzc2FnZSxcbiAgICAgICAgcmVsYXRpdmUocGF0aCwgcmVzdWx0LmZpbGVQYXRoKSxcbiAgICAgICAgbXNnLmxpbmUsXG4gICAgICAgIG1zZy5jb2x1bW5cbiAgICAgICk7XG4gICAgfVxuICB9XG4gIHJldHVybiAhcmVzdWx0cy5zb21lKFxuICAgIChyKSA9PiByLmZhdGFsRXJyb3JDb3VudCArIHIuZXJyb3JDb3VudCArIHIud2FybmluZ0NvdW50XG4gICk7XG59XG4iXX0=