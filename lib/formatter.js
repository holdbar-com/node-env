import { readFile } from 'node:fs/promises';
import { join, relative } from 'node:path';
import { check, resolveConfig } from 'prettier';
export async function formatted(reporter, path, files) {
    const src = await Promise.all(files.map((file) => Promise.all([
        readFile(join(path, file)),
        resolveConfig(join(path, file), {
            config: '.prettierrc.json',
            editorconfig: true,
        }),
    ])));
    try {
        const bad = (await Promise.all(src.map(([s, options], ix) => check(s.toString('utf8'), {
            ...options,
            filepath: files[ix],
        }))))
            .map((s, ix) => s ? undefined : relative(process.cwd(), files[ix] ?? ''))
            .filter((s) => s !== undefined);
        if (bad.length !== 0) {
            for (const file of bad) {
                reporter.error('Improperly formatted', file);
            }
            return false;
        }
        return true;
    }
    catch {
        return false;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZm9ybWF0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUMzQyxPQUFPLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUdoRCxNQUFNLENBQUMsS0FBSyxVQUFVLFNBQVMsQ0FDN0IsUUFBa0IsRUFDbEIsSUFBWSxFQUNaLEtBQWU7SUFFZixNQUFNLEdBQUcsR0FBRyxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQzNCLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUNqQixPQUFPLENBQUMsR0FBRyxDQUFDO1FBQ1YsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDMUIsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUU7WUFDOUIsTUFBTSxFQUFFLGtCQUFrQjtZQUMxQixZQUFZLEVBQUUsSUFBSTtTQUNuQixDQUFDO0tBQ0gsQ0FBQyxDQUNILENBQ0YsQ0FBQztJQUNGLElBQUk7UUFDRixNQUFNLEdBQUcsR0FBRyxDQUNWLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FDZixHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FDM0IsS0FBSyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDeEIsR0FBRyxPQUFPO1lBQ1YsUUFBUSxFQUFFLEtBQUssQ0FBQyxFQUFFLENBQUM7U0FDcEIsQ0FBQyxDQUNILENBQ0YsQ0FDRjthQUNFLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUNiLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FDekQ7YUFDQSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsS0FBSyxTQUFTLENBQUMsQ0FBQztRQUNsQyxJQUFJLEdBQUcsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3BCLEtBQUssTUFBTSxJQUFJLElBQUksR0FBRyxFQUFFO2dCQUN0QixRQUFRLENBQUMsS0FBSyxDQUFDLHNCQUFzQixFQUFFLElBQUksQ0FBQyxDQUFDO2FBQzlDO1lBQ0QsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUNELE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFBQyxNQUFNO1FBQ04sT0FBTyxLQUFLLENBQUM7S0FDZDtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWFkRmlsZSB9IGZyb20gJ25vZGU6ZnMvcHJvbWlzZXMnO1xuaW1wb3J0IHsgam9pbiwgcmVsYXRpdmUgfSBmcm9tICdub2RlOnBhdGgnO1xuaW1wb3J0IHsgY2hlY2ssIHJlc29sdmVDb25maWcgfSBmcm9tICdwcmV0dGllcic7XG5pbXBvcnQgdHlwZSB7IFJlcG9ydGVyIH0gZnJvbSAnLi9yZXBvcnRlci5qcyc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmb3JtYXR0ZWQoXG4gIHJlcG9ydGVyOiBSZXBvcnRlcixcbiAgcGF0aDogc3RyaW5nLFxuICBmaWxlczogc3RyaW5nW11cbikge1xuICBjb25zdCBzcmMgPSBhd2FpdCBQcm9taXNlLmFsbChcbiAgICBmaWxlcy5tYXAoKGZpbGUpID0+XG4gICAgICBQcm9taXNlLmFsbChbXG4gICAgICAgIHJlYWRGaWxlKGpvaW4ocGF0aCwgZmlsZSkpLFxuICAgICAgICByZXNvbHZlQ29uZmlnKGpvaW4ocGF0aCwgZmlsZSksIHtcbiAgICAgICAgICBjb25maWc6ICcucHJldHRpZXJyYy5qc29uJyxcbiAgICAgICAgICBlZGl0b3Jjb25maWc6IHRydWUsXG4gICAgICAgIH0pLFxuICAgICAgXSlcbiAgICApXG4gICk7XG4gIHRyeSB7XG4gICAgY29uc3QgYmFkID0gKFxuICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgICAgIHNyYy5tYXAoKFtzLCBvcHRpb25zXSwgaXgpID0+XG4gICAgICAgICAgY2hlY2socy50b1N0cmluZygndXRmOCcpLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgZmlsZXBhdGg6IGZpbGVzW2l4XSxcbiAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgICApXG4gICAgKVxuICAgICAgLm1hcCgocywgaXgpID0+XG4gICAgICAgIHMgPyB1bmRlZmluZWQgOiByZWxhdGl2ZShwcm9jZXNzLmN3ZCgpLCBmaWxlc1tpeF0gPz8gJycpXG4gICAgICApXG4gICAgICAuZmlsdGVyKChzKSA9PiBzICE9PSB1bmRlZmluZWQpO1xuICAgIGlmIChiYWQubGVuZ3RoICE9PSAwKSB7XG4gICAgICBmb3IgKGNvbnN0IGZpbGUgb2YgYmFkKSB7XG4gICAgICAgIHJlcG9ydGVyLmVycm9yKCdJbXByb3Blcmx5IGZvcm1hdHRlZCcsIGZpbGUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iXX0=